############################################################
##    FILENAME:   getListOfAvailableHosts.py    
##    VERSION:    1.0
##    SINCE:      2014-04-27
##    AUTHOR: 
##        Jimmy Lin (xl5224) - JimmyLin@utexas.edu  
##
############################################################
##    Edited by MacVim
##    Documentation auto-generated by Snippet 
############################################################

import HTMLParser
import sys
import os
class TableParser(HTMLParser.HTMLParser):
    def __init__(self):
        HTMLParser.HTMLParser.__init__(self)
        self.in_tr = False
        self.in_td = False
        self.tdIdx = 0
        self.record = []
        self.result = []

    def handle_starttag(self, tag, attrs):
        if tag == 'tr':
            self.in_tr = True
        if tag == 'td':
            self.in_td = True

    def handle_data(self, data):
        if self.in_td:
            self.record.append(data)
            self.tdIdx = self.tdIdx + 1
            if self.tdIdx == 5 and len(self.record) == 5:
                self.result.append(tuple(self.record))
                self.record = []
                self.tdIdx = 0

    def handle_endtag(self, tag):
        if tag == 'tr':
            self.in_tr = False
        if tag == 'td':
            self.in_td = False

if __name__ == '__main__':
    start = int(sys.argv[1])
    logFile = open(sys.argv[2], 'a+', 0)
    sys.stdout = logFile
    ## parse the html
    p = TableParser()
    data = ""
    for line in sys.stdin:
        data += line
    p.feed(data)
    ## make use of the result
    hostsList = p.result

    for host, status, upTimes, nUsers, Load in hostsList:
        nUsers = int(nUsers)
        Load = float(Load)
        if status == 'up' and nUsers <= 1:
            if Load <= 0.05:
                logstr = 'invoke: '+ host+ ' input: '+ str(start)+' end:'+ str(start+19)
                #print logstr
                cmd = './autoLogin %d %s' % (start, host)
                cmd += ' & '
                print cmd 
                os.system(cmd)
                start += 20

    logFile.close()
